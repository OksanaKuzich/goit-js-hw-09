{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAmCpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,aA1CzBL,EAAKY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAUC,OAAOH,EAAMI,cAAcZ,MAAMa,OAC3CC,EAASH,OAAOH,EAAMI,cAAcG,KAAKF,OACzCG,EAAWL,OAAOH,EAAMI,cAAcK,OAAOJ,OAEnD,GAAIH,EAAU,GAAKI,EAAS,EAG1B,OAFArB,EAAAyB,OAAOC,QAAS,0BAChBxB,EAAKyB,QAIP,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUK,IAAK,CAEjCtB,SAAWsB,EAAI,EAEfvB,EAAcC,SAHAW,EAAUI,EAASO,GAI9BC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARxB,SAAUC,EAAKuB,EAALvB,MACjByB,YAAW,WACThC,EAAAyB,OAAOQ,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAAN3B,EAAM,SAC5DA,MAEJ4B,OAAM,SAAAL,G,IAAGC,EAAQD,EAARxB,SAAUC,EAAKuB,EAALvB,MAClByB,YAAW,WACThC,EAAAyB,OAAOW,QAAQ,sBAAqCF,OAAfH,EAAS,QAAYG,OAAN3B,EAAM,SACzDA,MAGTL,EAAKyB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const delayEl = Number(event.currentTarget.delay.value);\n  const stepEl = Number(event.currentTarget.step.value);\n  const amountEl = Number(event.currentTarget.amount.value);\n\n  if (delayEl < 0 || stepEl < 0) {\n    Notify.failure(`Please enter time`);\n    form.reset();\n    return;\n  }\n\n  for (let i = 0; i < amountEl; i++) {\n    const delay = delayEl + stepEl * i;\n    position = i + 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","event","preventDefault","delayEl","Number","currentTarget","value","stepEl","step","amountEl","amount","Notify","failure","reset","i","then","param","_$position","setTimeout","success","concat","catch","warning"],"version":3,"file":"03-promises.903505fe.js.map"}